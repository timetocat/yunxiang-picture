server:
  port: 8123
  servlet:
    context-path: /api
spring:
  application:
    name: lo-picture-backend
  session:
    # todo 取消注释开启分布式 session（须先配置 Redis）
    # store-type: redis
    # 30 天过期
    timeout: 2592000
  servlet:
    multipart:
      max-file-size: 10MB
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.103:3306/db
    username: username
    password: password
  profiles:
    active: local
  # redis配置
  # todo 需替换配置，然后取消注释
#  redis:
#    database: 1
#    host: localhost
#    port: 6379
#    timeout: 5000
#    password: 123456

# 二级缓存
#jetcache:
#  statIntervalMinutes: 15
#  areaInCacheName: false
#  local:
#    default:
#      type: caffeine
#      #      limit: 100
#      keyConvertor: jackson #其他可选：fastjson/jackson
#  #      expireAfterWriteInMillis: 100000
#  remote:
#    default:
#      type: redis
#      keyConvertor: jackson #其他可选：fastjson/jackson
#      broadcastChannel: ${spring.application.name} # 广播频道名称设置为Spring应用程序名称
#      keyPrefix: ${spring.application.name}         # 键前缀设置为Spring应用程序名称
#      valueEncoder: java #其他可选：kryo/kryo5
#      valueDecoder: java #其他可选：kryo/kryo5
#      poolConfig:
#        minIdle: 5
#        maxIdle: 20
#        maxTotal: 50
#      host: ${spring.redis.host}
#      port: ${spring.redis.port}
#      password: ${spring.redis.password}
#      database: 2
#      defaultExpireInMillis: 5000  # 设置默认过期时间为5000毫秒（5秒）

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    # 仅在开发环境开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # https://baomidou.com/guides/logic-delete/
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）

default:
  # 默认注册用户名
  username: 无名
  # 默认注册密码
  password: 12345678
  # 是否启用OS服务
  enable-os: false
  # 默认OS服务
  os: minio
  # 使用url上传图片时缩略图默认格式
  os-format: jpg

# 对象存储配置（需要从腾讯云获取）
cos:
  client:
    host: xxx
    secretId: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx

# minio配置
minio:
  endpoint: http://${remote.service.ip}:${minio.port:9000}
  access-key: ${minio.access-key}
  secret-key: ${minio.secret-key}
  bucket-name: ${minio.bucket-name}

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.lyx.lopicture.controller